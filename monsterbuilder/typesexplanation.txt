Explanation of Types

Types have a set number of *features*
Hit Dice type (HD_type) {6, 8, 10, 12}
BAB equal to ? HD (BABprog) {0.5, 0,75, 1}
Good saves
Number of skill points per HD	

They also have *traits*
These are a combination of special qualities and proficiencies.
But others as well.

Special Ability: {name: '', description: '', shorthand: '', save_type: '', save_effect: '', save_ability: '', category: ''}
{name: '', description: '', shorthand: '', category: ''}

abberation = MonsterType(name = 'abberation', hdtype = '8', atk_as = '0.75', fortitude = 'poor', reflex = 'poor', will = 'good', skill_points = '2', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}]
animal = MonsterType(name = 'animal', hd_type = '8', atk_as = '0.75', fortitude = 'good', reflex = 'good', will = 'poor', skill_points = '15', number_of_feats = '0')
	Traits = [{"name":"low-light vision","category":"senses"}]
beast = MonsterType(name = 'beast', hd_type = '10', atk_as = '0.75', fortitude = 'good', reflex = 'good', will = 'poor', skill_points = '1', number_of_feats = '0')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}, {"name":"low-light vision","category":"senses"}]
construct = MonsterType(name = 'construct', hd_type = '10', atk_as = '0.75', fortitude = 'poor', reflex = 'poor', will = 'poor', skill_points = '0', number_of_feats = '0')
	Traits = [{"name":"poison immunity","shorthand":"poison","category":"immunity"},{"name":"sleep immunity","shorthand":"sleep","category":"immunity"},{"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"},{"name":"stunning immunity","shorthand":"stunning","category":"immunity"},{"name":"disease immunity","shorthand":"disease","category":"immunity"},{"name":"mind-influence immunity","shorthand":"mind-influencing effects","category":"immunity"},{"name":"death effect immunity","shorthand":"death effects","category":"immunity"},{"name":"necromantic effects immunity","shorthand":"necromantic effects","category":"immunity"},{"name":"not alive","description":"The MON is not subject to critical hits, subdual damage, ability damage, ability drain, energy drain, any effect requiring a Fortitude save (unless it also affects objects). It is not at risk of death from massive damage, but when reduced to 0 hp or less, it is immediately destroyed.","category":"quality"}]
dragon = MonsterType(name = 'dragon', hd_type = '12', atk_as = '1', fortitude = 'good', reflex = 'good', will = 'good', skill_points = '6', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}, {"name":"low-light vision","category":"senses"}, {"name":"sleep immunity","shorthand":"sleep","category":"immunity"},{"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"}]
elemental = MonsterType(name = 'elemental', hd_type = '8', atk_as = '0.75', fortitude = 'open', reflex = 'open', will = 'open', skill_points = '2', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"},{"name":"poison immunity","shorthand":"poison","category":"immunity"},{"name":"sleep immunity","shorthand":"sleep","category":"immunity"},{"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"},{"name":"stunning immunity","shorthand":"stunning","category":"immunity"},{"name":"ambiguous facing","description":"As the MON has no clear front or back, it is not subject to critical hits or flanking.","category":"quality"}]
fey = MonsterType(name = 'fey', hd_type = '6', atk_as = '0.5', fortitude = 'poor', reflex = 'good', will = 'good', skill_points = '2', number_of_feats = '1')
	Traits = [{"name":"low-light vision","category":"senses"}]
giant = MonsterType(name = 'giant', hd_type = '8', atk_as = '0.75', fortitude = 'good', reflex = 'poor', will = 'poor', skill_points = '1', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}]
humanoid = MonsterType(name = 'humanoid', hd_type = '8', atk_as = '0.75', fortitude = 'open', reflex = 'open', will = 'open', skill_points = '1', number_of_feats = '1')
	Traits = 
magicalbeast = MonsterType(name = 'magical beast', hd_type = '10', atk_as = '1', fortitude = 'good', reflex = 'good', will = 'poor', skill_points = '1', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}, {"name":"low-light vision","category":"senses"}]
monstroushumanoid = MonsterType(name = 'monstrous humanoid', hd_type = '8', atk_as = '1', fortitude = 'poor', reflex = 'good', will = 'good', skill_points = '2', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}]
ooze = MonsterType(name = 'ooze', hd_type = '10', atk_as = '0.75', fortitude = 'poor', reflex = 'poor', will = 'poor', skill_points = '0', number_of_feats = '0')
	Traits = [{"name":"poison immunity","shorthand":"poison","category":"immunity"},{"name":"sleep immunity","shorthand":"sleep","category":"immunity"},{"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"},{"name":"stunning immunity","shorthand":"stunning","category":"immunity"},{"name": "polymorphing immunity", "shorthand": "polymorph", "category": "immunity"}, {"name":"mind-influence immunity","shorthand":"mind-influencing effects","category":"immunity"}, {"name":"ambiguous facing","description":"As the MON has no clear front or back, it is not subject to critical hits or flanking.","category":"quality"}] bonus hp
outsider = MonsterType(name = 'outsider', hd_type = '8', atk_as = '1', fortitude = 'good', reflex = 'good', will = 'good', skill_points = '8', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}]
plant = MonsterType(name = 'plant', hd_type = '8', atk_as = '0.75', fortitude = 'good', reflex = 'poor', will = 'poor', skill_points = '0', number_of_feats = '0')
	Traits = [{"name":"low-light vision","category":"senses"}, {"name":"poison immunity","shorthand":"poison","category":"immunity"},{"name":"sleep immunity","shorthand":"sleep","category":"immunity"},{"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"},{"name":"stunning immunity","shorthand":"stunning","category":"immunity"},{"name": "polymorphing immunity", "shorthand": "polymorph", "category": "immunity"}, {"name":"mind-influence immunity","shorthand":"mind-influencing effects","category":"immunity"},{"name":"not subject to critical hits", "description": "The MON is not subject to critical hits.","category":"quality"}]
shapechanger = MonsterType(name = 'shapechanger', hd_type = '8', atk_as = '0.75', fortitude = 'good', reflex = 'good', will = 'good', skill_points = '1', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}]
undead = MonsterType(name = 'undead', hd_type = '12', atk_as = '0.5', fortitude = 'poor', reflex = 'poor', will = 'good', skill_points = '2', number_of_feats = '1')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}, {"name":"poison immunity","shorthand":"poison","category":"immunity"},{"name":"sleep immunity","shorthand":"sleep","category":"immunity"}, {"name":"paralysis immunity","shorthand":"paralysis","category":"immunity"}, {"name":"stunning immunity","shorthand":"stunning","category":"immunity"},{"name":"disease immunity","shorthand":"disease","category":"immunity"}, {"name":"mind-influence immunity","shorthand":"mind-influencing effects","category":"immunity"},{"name":"death effect immunity","shorthand":"death effects","category":"immunity"},{"name":"necromantic effects immunity","shorthand":"necromantic effects","category":"immunity"}, {"name":"not alive","description":"The MON is not subject to critical hits, subdual damage, ability damage, ability drain, energy drain, any effect requiring a Fortitude save (unless it also affects objects). It is not at risk of death from massive damage, but when reduced to 0 hp or less, it is immediately destroyed.","category":"quality"}]
vermin = MonsterType(name = 'vermin', hd_type = '8', atk_as = '0.75', fortitude = 'good', reflex = 'poor', will = 'poor', skill_points = '12', number_of_feats = '0')
	Traits = [{"name":"darkvision","shorthand":"60 ft.","category":"senses"}, {"name":"mind-influence immunity","shorthand":"mind-influencing effects","category":"immunity"}] if venomous, gains bonus for DC


1:26:00

Model of traits
trait name
trait group (sense, proficiency, immunity, bonus, resistance, aura, spell, alignment, treasure, vulnerability, language, ability)
trait description

MonsterTrait(name= "venom", group = "attack")
MonsterTrait(name= "bonus hp", group = "bonus")
MonsterTrait(name= "ability damage", group = "immunity")
MonsterTrait(name= "ability drain", group = "immunity")
MonsterTrait(name= "any effect requiring a Fortitude save (unless it also works on objects)", group = "immunity")
MonsterTrait(name= "crits", group = "immunity")
MonsterTrait(name= "energy drain", group = "immunity")
MonsterTrait(name= "death effects", group = "immunity")
MonsterTrait(name= "disease", group = "immunity")
MonsterTrait(name= "flanking", group = "immunity")
MonsterTrait(name= "mind-influencing effects", group = "immunity")
MonsterTrait(name= "necromantic effects", group = "immunity")
MonsterTrait(name= "paralysis", group = "immunity")
MonsterTrait(name= "poison", group = "immunity")
MonsterTrait(name= "shapeshifting", group = "immunity")
MonsterTrait(name= "sleep", group = "immunity")
MonsterTrait(name= "stunning", group = "immunity")
MonsterTrait(name= "subdual damage", group = "immunity")
MonsterTrait(name= "simple weapons", group = "proficiency")
MonsterTrait(name= "martial weapons", group = "proficiency")
MonsterTrait(name= "exotic weapons", group = "proficiency")
MonsterTrait(name= "light armor", group = "proficiency")
MonsterTrait(name= "medium armor", group = "proficiency")
MonsterTrait(name= "heavy armor", group = "proficiency")
MonsterTrait(name= "shield", group = "proficiency")
MonsterTrait(name= "low-light vision", group = "senses")
MonsterTrait(name= "darkvision 60 ft.", group = "senses")


Subtypes
Fire, immune to fire, 
Swarm = MonsterSubType(name = "swarm", fortitude = "poor", reflex = "poor", will = "good", skill_points = "2", feats = "1")
	Traits "slashing resistance", "piercing resistance", "weapon damage immunity" (fine and diminutive only) "not subject to crits", "not subject to flanking"


Information required for MonsterBuilder
how attack bonuses work, especially bows
monster type characterictics

        // Primary Attacks get full BAB, whereas Secondary Attacks have a penalty
        if (e.target.parentElement.id==="primary") {
          attackBonus = this.baseAtkBonus;
          attackList = "primary";
        }
        else if (e.target.parentElement.id==="secondary") {
          // TODO: dual-wielding
          /*
          // TODO: Multiattack feat (-2 instead of -5)
          if (this.featList.includes("multiattack")) {
            attackBonus = this.baseAtkBonus-2;
          }
          else {
            attackBonus = this.baseAtkBonus-5;
          }*/
          attackList = "secondary";
        }
        let sizeOfWeapon = sizeModifier(this.weaponSize);
        // Attack Bonus and Attack Damage depend on Attack Form
        if (this.attackForm==='melee') {
          attackBonus += this.strengthModifier + this.monsterSizeModifier;
          /*
          DAMAGE: Half extra strength bonus if manufactured weapon wielded with two hands, or a strong natural weapon.
          Check if strengthModifier is positive to prevent adding a strength penalty.
          Manufactured weapon cannot be light (smaller than monster).
          If a monster has only one natural weapon it is usually strong, but it can have more than one strong natural weapon (see dragons).
          this.sizeModifier(this.weaponSize)
          this.sizeModifier(this.monsterSize)
          or sole natural weapon
          */
          if (this.strengthModifier > 0 && (this.attackTwoHanded && (sizeOfWeapon >= this.monsterSizeModifier))) {
            damageBonus = this.strengthModifier*1.5;
          }
          else {
            damageBonus = this.strengthModifier;
          }
        }
        else if (this.attackForm==='ranged') {
          attackBonus += this.dexterityModifier + this.monsterSizeModifier;
          // Add strength penalty, unless using a crossbow. If using composite bow, add strength bonus.
          if ((this.strengthModifier < 0 && !this.attackName.includes('crossbow')) || (this.strengthModifier > 0 && this.attackName.includes('composite'))) {
            damageBonus = this.strengthModifier;
          }
        }
        else if (this.attackForm=='thrown') {
          attackBonus += this.dexterityModifier + this.monsterSizeModifier;
          damageBonus = this.strengthModifier;
        }
        
        
        
FEATS
Ambidexterity, ignore off hand penalties
Armor/Weapon/Shield proficiency
Combat Reflexes (1+DEX mod AOOs)
Extra Turning (turning * 4)
Improved Critical (double threat range)
Mobility (+4 AC vs AOO)
Spell focus (+2 DC chosen school of magic)
Spell Mastery
Two-Weapon Fighting (reduces penalties by 2)
Weapon Finesse (light, rapier, spiked chain, shield's acp applies)
Weapon Focus (+1 attack roll)
Weapon specializaition (+2 damage, 4th fighter only)


4 main differences
natural
primary/secondary
melee/ranged
regular OR strong (usually sole) natural weapon

manufactured
melee/
one-handed/off-hand/two-handed/multiple or double weapon(s)
/ranged/thrown

{ nature: 'manufactured/natural', {nat-only group:'primary/secondary', sole:True/False},{man-only weapon_size: 'SIZE', hand: 'one-handed/off-hand/two-handed/multiple/double'},  form: 'melee/ranged/thrown', atk_name: 'keen flaming longspear', number: 1, weapon_damage: '1d8', crit_range: 2, crit_double: 'x2', special_effect: '1d4 fire', magic: 1},


if: natural, primary, melee
	attack: str
	damage: str*(strong && str>0? 1.5 : 1)
if: natural, primary, ranged
	attack: dex
	damage: 0
if: natural, secondary, melee
	attack: str -(multiattack? 2 : 5)
	damage: str*(strong && str>0? 1.5 : 0.5)
if: natural, secondary, ranged
	attack: dex -(multiattack? 2 : 5)
	damage: 0

if: manufactured, melee, one-handed
	attack: str (extra attacks if BAB>4)
	damage: str
if: manufactured, melee, two-handed
	attack: str (extra attacks if BAB>4)
	damage: str*(str>0? 1.5 : 1)
if: manufactured, melee, off-hand
	attack: str ambidextrous or multidextrous? 0 : -4 (extra attacks if BAB>4)
	damage: str*(str>0? 0.5 : 1)
if: manufactured, melee, double or multiple weapons
	attack1: str -2 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2 (extra attacks if BAB>4)
	attack2+: str -2 ambidextrous or multidextrous? 0 : -4 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2 (extra attacks if BAB>4)
	damage1: str
	damage2: str*(str>0? 0.5 : 1)

if: manufactured, ranged
	attack: dex (extra attacks if BAB>4)
	damage: (bow or sling && str<0 && !crossbow && !composite bow) || (composite bow && str>0)? str : 0
if: manufactured, ranged, multiple
	attack: dex -2 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2 (extra attacks if BAB>4)
	attack2+: dex -2 ambidextrous or multidextrous? 0 : -4 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2
	damage1: (bow or sling && str<0 && !crossbow && !composite bow) || (composite bow && str>0)? str : 0
	damage2: (bow or sling && str<0 && !crossbow && !composite bow)? str : 0
if: manufactured, thrown
	attack: dex (extra attacks if BAB>4)
	damage: str
if: manufactured, thrown, multiple
	attack: dex -2 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2 (extra attacks if BAB>4)
	attack2+: dex -2 ambidextrous or multidextrous? 0 : -4 off-hand==light? -0 : -2 multi-weapon-fighting or two-weapon-fighting? -0 : -2
	damage1: str
	damage2: 0
